#**********************************************************************************************#
#********* Export point cloud(s) to .ply file **************************************************#
#********* by Djordje Spasic ******************************************************************#
#********* issworld2000@yahoo.com 14-Apr-2017 *************************************************#

"""
Rhino 5 can not export point clouds to .PLY format.
This function exports picked point clouds from Rhino as a single merged point cloud in .PLY format.
Along with point coordinates, point cloud's colors and normals are exported to .PLY file too.
The script is based on the suggestions by "JKolodner" user:
https://discourse.mcneel.com/t/exporting-a-pointcloud-as-a-csv-file-with-colour/15254/22
"""

import rhinoscriptsyntax as rs
import System
import Rhino

def exportPtCloudDataToPLY(ptCloudIds):
    # ply file path
    filePath = rs.SaveFileName("Save ply file","*.ply||", None, "exportPointCloudData", "ply")
    if filePath == None: 
        print "You haven't picked a file name for the .ply file"
        return
    
    # merge all picked point clouds
    ptClouds = [rs.coercegeometry(id)  for id in ptCloudIds]
    joinedPtCloud = Rhino.Geometry.PointCloud()
    for ptCloud in ptClouds:
        joinedPtCloud.Merge(ptCloud)
    
    file = open(filePath, "w")
    pts = joinedPtCloud.GetPoints()
    plyheader = """ply
format ascii 1.0
comment Author: point cloud PLY export, by Djordje Spasic
obj_info Generated by Rhino 5!
element vertex %s
property float x
property float y
property float z
property float nx
property float ny
property float nz
property uchar red
property uchar green
property uchar blue
end_header\n""" % len(pts)

    file.write(plyheader)
    
    #default values
    defaultColor = System.Drawing.Color.FromArgb(0,0,0)   # black
    defaultNormal = Rhino.Geometry.Vector3d(0,0,1)   # z vector
    
    if joinedPtCloud.ContainsColors:
        colors = joinedPtCloud.GetColors()
    else:
        colors = [defaultColor for i in range(len(pts))]
    if joinedPtCloud.ContainsNormals:
        normals = joinedPtCloud.GetNormals()
    else:
        normals = [defaultNormal for i in range(len(pts))]
    
    for i in range(len(pts)):
        line = "%.3f %.3f %.3f %.3f %.3f %.3f %s %s %s\n" %(pts[i].X, pts[i].Y, pts[i].Z, normals[i].X, normals[i].Y, normals[i].Z, colors[i].R, colors[i].G, colors[i].B)
        file.write(line)
    file.close()
    print "Point cloud data successfully exported to '%s' file." % filePath

_ptCloudIds = rs.GetObjects("Pick up point cloud(s) you wish to export as PLY", 2, True)
if (_ptCloudIds) and (len(_ptCloudIds) > 0):
    exportPtCloudDataToPLY(_ptCloudIds)
